// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: pb/algorithm.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FizzBuzzRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PuzzleLength int32 `protobuf:"varint,1,opt,name=puzzleLength,proto3" json:"puzzleLength,omitempty"`
}

func (x *FizzBuzzRequest) Reset() {
	*x = FizzBuzzRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_algorithm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FizzBuzzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FizzBuzzRequest) ProtoMessage() {}

func (x *FizzBuzzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_algorithm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FizzBuzzRequest.ProtoReflect.Descriptor instead.
func (*FizzBuzzRequest) Descriptor() ([]byte, []int) {
	return file_pb_algorithm_proto_rawDescGZIP(), []int{0}
}

func (x *FizzBuzzRequest) GetPuzzleLength() int32 {
	if x != nil {
		return x.PuzzleLength
	}
	return 0
}

type HistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HistoryRequest) Reset() {
	*x = HistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_algorithm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryRequest) ProtoMessage() {}

func (x *HistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_algorithm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryRequest.ProtoReflect.Descriptor instead.
func (*HistoryRequest) Descriptor() ([]byte, []int) {
	return file_pb_algorithm_proto_rawDescGZIP(), []int{1}
}

type HistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resolutions []*ResolutionResponse `protobuf:"bytes,1,rep,name=resolutions,proto3" json:"resolutions,omitempty"`
}

func (x *HistoryResponse) Reset() {
	*x = HistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_algorithm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryResponse) ProtoMessage() {}

func (x *HistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_algorithm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryResponse.ProtoReflect.Descriptor instead.
func (*HistoryResponse) Descriptor() ([]byte, []int) {
	return file_pb_algorithm_proto_rawDescGZIP(), []int{2}
}

func (x *HistoryResponse) GetResolutions() []*ResolutionResponse {
	if x != nil {
		return x.Resolutions
	}
	return nil
}

type FizzBuzzResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resolution *ResolutionResponse `protobuf:"bytes,1,opt,name=resolution,proto3" json:"resolution,omitempty"`
}

func (x *FizzBuzzResponse) Reset() {
	*x = FizzBuzzResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_algorithm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FizzBuzzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FizzBuzzResponse) ProtoMessage() {}

func (x *FizzBuzzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_algorithm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FizzBuzzResponse.ProtoReflect.Descriptor instead.
func (*FizzBuzzResponse) Descriptor() ([]byte, []int) {
	return file_pb_algorithm_proto_rawDescGZIP(), []int{3}
}

func (x *FizzBuzzResponse) GetResolution() *ResolutionResponse {
	if x != nil {
		return x.Resolution
	}
	return nil
}

type ResolutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateResolved string `protobuf:"bytes,1,opt,name=dateResolved,proto3" json:"dateResolved,omitempty"`
	PuzzleName   string `protobuf:"bytes,2,opt,name=puzzleName,proto3" json:"puzzleName,omitempty"`
	Solution     string `protobuf:"bytes,3,opt,name=solution,proto3" json:"solution,omitempty"`
}

func (x *ResolutionResponse) Reset() {
	*x = ResolutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_algorithm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolutionResponse) ProtoMessage() {}

func (x *ResolutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_algorithm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolutionResponse.ProtoReflect.Descriptor instead.
func (*ResolutionResponse) Descriptor() ([]byte, []int) {
	return file_pb_algorithm_proto_rawDescGZIP(), []int{4}
}

func (x *ResolutionResponse) GetDateResolved() string {
	if x != nil {
		return x.DateResolved
	}
	return ""
}

func (x *ResolutionResponse) GetPuzzleName() string {
	if x != nil {
		return x.PuzzleName
	}
	return ""
}

func (x *ResolutionResponse) GetSolution() string {
	if x != nil {
		return x.Solution
	}
	return ""
}

var File_pb_algorithm_proto protoreflect.FileDescriptor

var file_pb_algorithm_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x62, 0x2f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x0f, 0x46, 0x69, 0x7a, 0x7a, 0x42, 0x75, 0x7a, 0x7a,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x7a, 0x7a, 0x6c,
	0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70,
	0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x10, 0x0a, 0x0e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x48, 0x0a,
	0x0f, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x47, 0x0a, 0x10, 0x46, 0x69, 0x7a, 0x7a, 0x42,
	0x75, 0x7a, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x74, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75,
	0x7a, 0x7a, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x6a, 0x0a, 0x05, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x12,
	0x31, 0x0a, 0x08, 0x46, 0x69, 0x7a, 0x7a, 0x42, 0x75, 0x7a, 0x7a, 0x12, 0x10, 0x2e, 0x46, 0x69,
	0x7a, 0x7a, 0x42, 0x75, 0x7a, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x46, 0x69, 0x7a, 0x7a, 0x42, 0x75, 0x7a, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x2e, 0x0a, 0x07, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0f, 0x2e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x75, 0x64, 0x72, 0x65, 0x6e, 0x62, 0x64, 0x62, 0x2f, 0x61, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x72, 0x76, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_algorithm_proto_rawDescOnce sync.Once
	file_pb_algorithm_proto_rawDescData = file_pb_algorithm_proto_rawDesc
)

func file_pb_algorithm_proto_rawDescGZIP() []byte {
	file_pb_algorithm_proto_rawDescOnce.Do(func() {
		file_pb_algorithm_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_algorithm_proto_rawDescData)
	})
	return file_pb_algorithm_proto_rawDescData
}

var file_pb_algorithm_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pb_algorithm_proto_goTypes = []interface{}{
	(*FizzBuzzRequest)(nil),    // 0: FizzBuzzRequest
	(*HistoryRequest)(nil),     // 1: HistoryRequest
	(*HistoryResponse)(nil),    // 2: HistoryResponse
	(*FizzBuzzResponse)(nil),   // 3: FizzBuzzResponse
	(*ResolutionResponse)(nil), // 4: ResolutionResponse
}
var file_pb_algorithm_proto_depIdxs = []int32{
	4, // 0: HistoryResponse.resolutions:type_name -> ResolutionResponse
	4, // 1: FizzBuzzResponse.resolution:type_name -> ResolutionResponse
	0, // 2: Solve.FizzBuzz:input_type -> FizzBuzzRequest
	1, // 3: Solve.History:input_type -> HistoryRequest
	3, // 4: Solve.FizzBuzz:output_type -> FizzBuzzResponse
	2, // 5: Solve.History:output_type -> HistoryResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pb_algorithm_proto_init() }
func file_pb_algorithm_proto_init() {
	if File_pb_algorithm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_algorithm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FizzBuzzRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_algorithm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_algorithm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_algorithm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FizzBuzzResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_algorithm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_algorithm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_algorithm_proto_goTypes,
		DependencyIndexes: file_pb_algorithm_proto_depIdxs,
		MessageInfos:      file_pb_algorithm_proto_msgTypes,
	}.Build()
	File_pb_algorithm_proto = out.File
	file_pb_algorithm_proto_rawDesc = nil
	file_pb_algorithm_proto_goTypes = nil
	file_pb_algorithm_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SolveClient is the client API for Solve service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SolveClient interface {
	FizzBuzz(ctx context.Context, in *FizzBuzzRequest, opts ...grpc.CallOption) (*FizzBuzzResponse, error)
	History(ctx context.Context, in *HistoryRequest, opts ...grpc.CallOption) (*HistoryResponse, error)
}

type solveClient struct {
	cc grpc.ClientConnInterface
}

func NewSolveClient(cc grpc.ClientConnInterface) SolveClient {
	return &solveClient{cc}
}

func (c *solveClient) FizzBuzz(ctx context.Context, in *FizzBuzzRequest, opts ...grpc.CallOption) (*FizzBuzzResponse, error) {
	out := new(FizzBuzzResponse)
	err := c.cc.Invoke(ctx, "/Solve/FizzBuzz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *solveClient) History(ctx context.Context, in *HistoryRequest, opts ...grpc.CallOption) (*HistoryResponse, error) {
	out := new(HistoryResponse)
	err := c.cc.Invoke(ctx, "/Solve/History", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SolveServer is the server API for Solve service.
type SolveServer interface {
	FizzBuzz(context.Context, *FizzBuzzRequest) (*FizzBuzzResponse, error)
	History(context.Context, *HistoryRequest) (*HistoryResponse, error)
}

// UnimplementedSolveServer can be embedded to have forward compatible implementations.
type UnimplementedSolveServer struct {
}

func (*UnimplementedSolveServer) FizzBuzz(context.Context, *FizzBuzzRequest) (*FizzBuzzResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FizzBuzz not implemented")
}
func (*UnimplementedSolveServer) History(context.Context, *HistoryRequest) (*HistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method History not implemented")
}

func RegisterSolveServer(s *grpc.Server, srv SolveServer) {
	s.RegisterService(&_Solve_serviceDesc, srv)
}

func _Solve_FizzBuzz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FizzBuzzRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SolveServer).FizzBuzz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Solve/FizzBuzz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SolveServer).FizzBuzz(ctx, req.(*FizzBuzzRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Solve_History_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SolveServer).History(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Solve/History",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SolveServer).History(ctx, req.(*HistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Solve_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Solve",
	HandlerType: (*SolveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FizzBuzz",
			Handler:    _Solve_FizzBuzz_Handler,
		},
		{
			MethodName: "History",
			Handler:    _Solve_History_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/algorithm.proto",
}
